[{"D:\\snektrade\\fang\\src\\index.tsx":"1","D:\\snektrade\\fang\\src\\reportWebVitals.ts":"2","D:\\snektrade\\fang\\src\\App.tsx":"3","D:\\snektrade\\fang\\src\\components\\home.tsx":"4","D:\\snektrade\\fang\\src\\components\\about.tsx":"5","D:\\snektrade\\fang\\src\\components\\Home.tsx":"6","D:\\snektrade\\fang\\src\\components\\About.tsx":"7","D:\\snektrade\\fang\\src\\components\\PositionList.tsx":"8","D:\\snektrade\\fang\\src\\components\\AppNavBar.tsx":"9","D:\\snektrade\\fang\\src\\components\\Trade.tsx":"10","D:\\snektrade\\fang\\src\\services\\strategies.ts":"11","D:\\snektrade\\fang\\src\\services\\models\\TradeModel.ts":"12","D:\\snektrade\\fang\\src\\components\\strat-form\\StockForm.tsx":"13","D:\\snektrade\\fang\\src\\components\\strat-form\\SimpleOptionForm.tsx":"14","D:\\snektrade\\fang\\src\\services\\TradeService.ts":"15","D:\\snektrade\\fang\\src\\components\\models\\TradeUI.ts":"16","D:\\snektrade\\fang\\src\\components\\models\\TransactionUI.ts":"17","D:\\snektrade\\fang\\src\\components\\PositionRow.tsx":"18","D:\\snektrade\\fang\\src\\components\\models\\LotUI.ts":"19","D:\\snektrade\\fang\\src\\services\\models\\LotModel.ts":"20","D:\\snektrade\\fang\\src\\components\\Tracker.tsx":"21","D:\\snektrade\\fang\\src\\components\\Transactions.tsx":"22","D:\\snektrade\\fang\\src\\utils\\calcs.ts":"23","D:\\snektrade\\fang\\src\\components\\Perf.tsx":"24","D:\\snektrade\\fang\\src\\services\\UserContext.ts":"25","D:\\snektrade\\fang\\src\\services\\models\\UserModel.ts":"26"},{"size":841,"mtime":1610975359995,"results":"27","hashOfConfig":"28"},{"size":425,"mtime":499162500000,"results":"29","hashOfConfig":"28"},{"size":2518,"mtime":1610975350940,"results":"30","hashOfConfig":"28"},{"size":146,"mtime":1609916816957,"results":"31","hashOfConfig":"28"},{"size":218,"mtime":1609916808623,"results":"32","hashOfConfig":"28"},{"size":146,"mtime":1609916816957,"results":"33","hashOfConfig":"28"},{"size":218,"mtime":1609916808623,"results":"34","hashOfConfig":"28"},{"size":3202,"mtime":1610974277144,"results":"35","hashOfConfig":"28"},{"size":2897,"mtime":1611101524054,"results":"36","hashOfConfig":"28"},{"size":6216,"mtime":1610970097856,"results":"37","hashOfConfig":"28"},{"size":184,"mtime":1609921740808,"results":"38","hashOfConfig":"28"},{"size":220,"mtime":1610008811525,"results":"39","hashOfConfig":"28"},{"size":1943,"mtime":1610614086199,"results":"40","hashOfConfig":"28"},{"size":3669,"mtime":1610614396605,"results":"41","hashOfConfig":"28"},{"size":996,"mtime":1610974064849,"results":"42","hashOfConfig":"28"},{"size":246,"mtime":1610436615091,"results":"43","hashOfConfig":"28"},{"size":813,"mtime":1610441353363,"results":"44","hashOfConfig":"28"},{"size":4381,"mtime":1610966344216,"results":"45","hashOfConfig":"28"},{"size":343,"mtime":1610589566435,"results":"46","hashOfConfig":"28"},{"size":314,"mtime":1610317097426,"results":"47","hashOfConfig":"28"},{"size":1186,"mtime":1610963337689,"results":"48","hashOfConfig":"28"},{"size":4216,"mtime":1610974399243,"results":"49","hashOfConfig":"28"},{"size":221,"mtime":1610580020655,"results":"50","hashOfConfig":"28"},{"size":4671,"mtime":1610974363102,"results":"51","hashOfConfig":"28"},{"size":1087,"mtime":1610969869508,"results":"52","hashOfConfig":"28"},{"size":104,"mtime":1610969366796,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"1mgfae3",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"56"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"D:\\snektrade\\fang\\src\\index.tsx",[],["109","110"],"D:\\snektrade\\fang\\src\\reportWebVitals.ts",[],"D:\\snektrade\\fang\\src\\App.tsx",[],"D:\\snektrade\\fang\\src\\components\\home.tsx",[],"D:\\snektrade\\fang\\src\\components\\about.tsx",[],"D:\\snektrade\\fang\\src\\components\\Home.tsx",[],"D:\\snektrade\\fang\\src\\components\\About.tsx",[],"D:\\snektrade\\fang\\src\\components\\PositionList.tsx",[],"D:\\snektrade\\fang\\src\\components\\AppNavBar.tsx",[],"D:\\snektrade\\fang\\src\\components\\Trade.tsx",[],"D:\\snektrade\\fang\\src\\services\\strategies.ts",[],"D:\\snektrade\\fang\\src\\services\\models\\TradeModel.ts",[],["111","112"],"D:\\snektrade\\fang\\src\\components\\strat-form\\StockForm.tsx",[],"D:\\snektrade\\fang\\src\\components\\strat-form\\SimpleOptionForm.tsx",[],"D:\\snektrade\\fang\\src\\services\\TradeService.ts",[],"D:\\snektrade\\fang\\src\\components\\models\\TradeUI.ts",[],"D:\\snektrade\\fang\\src\\components\\models\\TransactionUI.ts",[],"D:\\snektrade\\fang\\src\\components\\PositionRow.tsx",[],"D:\\snektrade\\fang\\src\\components\\models\\LotUI.ts",[],"D:\\snektrade\\fang\\src\\services\\models\\LotModel.ts",[],"D:\\snektrade\\fang\\src\\components\\Tracker.tsx",[],"D:\\snektrade\\fang\\src\\components\\Transactions.tsx",[],"D:\\snektrade\\fang\\src\\utils\\calcs.ts",[],"D:\\snektrade\\fang\\src\\components\\Perf.tsx",["113"],"import { Card, Elevation } from \"@blueprintjs/core\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { ResponsiveBar } from '@nivo/bar'\r\nimport { TableTransactionUI } from \"./models/TransactionUI\";\r\nimport { TradeService } from \"../services/TradeService\";\r\nimport { isWhiteSpaceLike } from \"typescript\";\r\nimport { UserContext } from \"../services/UserContext\";\r\n\r\nclass AggTrans {\r\n    symbol: string = '';\r\n    amount: number = 0;\r\n    gain: number = 0;\r\n    loss: number = 0;\r\n}\r\n\r\nexport const Perf = () => {\r\n\r\n\r\n    const [agg, setAgg] = useState<AggTrans[]>([]);\r\n    const [colors, setColors] = useState<string[]>([]);\r\n    const userCtx = useContext(UserContext);\r\n\r\n\r\n  \r\n      useEffect(() => {\r\n        async function fetchData() {\r\n            const tradeSvc = new TradeService(userCtx.accessToken);\r\n            const data = await tradeSvc.GetOpenTransactions();\r\n            const trUIList:  TableTransactionUI[] = data.map((t) => {\r\n                return {\r\n                    Id: t.ID,\r\n                    Symbol: t.Symbol,\r\n                    Quantity: t.Quantity,\r\n                    Price: t.Price,\r\n                    IsMargin: t.IsMargin,\r\n                    Strike: t.Strike,\r\n                    Expiry: t.Expiry,\r\n                    IsShort: t.IsShort,\r\n                    TransType: t.TransType,\r\n                    Amount: t.Amount,\r\n                    Commission: t.Commission,\r\n                    Fees: t.Fees,\r\n                    IsExercised: t.IsExercised,\r\n                    CreatedAt: t.CreatedAt\r\n    \r\n                }\r\n            })\r\n    \r\n            let initList: AggTrans[] = [];\r\n    \r\n            const group = trUIList.reduce((r, a) => {\r\n    \r\n                const curIndx = r.findIndex((x) => {return x.symbol === a.Symbol})\r\n                \r\n                curIndx !== -1 ? r[curIndx].amount += a.Amount : r.push({symbol: a.Symbol, amount: a.Amount, gain:0, loss:0})\r\n                \r\n                return r;\r\n            }, initList).map(x => {\r\n                if(x.amount < 0) {\r\n                    x.loss = x.amount\r\n                } else {\r\n                    x.gain = x.amount\r\n                }\r\n                return x;\r\n            });\r\n    \r\n    \r\n            setAgg(group);\r\n            setColors(group.map(x => x.gain === 0 ? \"#0D8050\" : \"#C23030\"));\r\n        }\r\n          fetchData()\r\n        }, [userCtx])\r\n\r\n    return (\r\n    <div>\r\n    <Card style={{height: \"450px\"}} interactive={false} elevation={Elevation.TWO}>\r\n            {MyResponsiveBar(agg, colors)}\r\n    </Card>\r\n    </div>\r\n    );\r\n}\r\n\r\n// make sure parent container have a defined height when using\r\n// responsive component, otherwise height will be 0 and\r\n// no chart will be rendered.\r\n// website examples showcase many properties,\r\n// you'll often use just a few of them.\r\nconst MyResponsiveBar = ( data: any, colors: any ) => (\r\n\r\n\r\n    <ResponsiveBar\r\n        data={data}\r\n        keys={['gain','loss']}\r\n        indexBy=\"symbol\"\r\n        margin={{ top: 50, right: 130, bottom: 50, left: 60 }}\r\n        padding={0.3}\r\n        valueScale={{ type: 'linear' }}\r\n        indexScale={{ type: 'band', round: true }}\r\n        colors={colors}\r\n        defs={[\r\n            {\r\n                id: 'dots',\r\n                type: 'patternDots',\r\n                background: 'inherit',\r\n                color: '#38bcb2',\r\n                size: 4,\r\n                padding: 1,\r\n                stagger: true\r\n            },\r\n            {\r\n                id: 'lines',\r\n                type: 'patternLines',\r\n                background: 'inherit',\r\n                color: '#eed312',\r\n                rotation: -45,\r\n                lineWidth: 6,\r\n                spacing: 10\r\n            }\r\n        ]}\r\n        fill={[\r\n        ]}\r\n        borderColor={{ from: 'color', modifiers: [ [ 'darker', 1.6 ] ] }}\r\n        axisTop={null}\r\n        axisRight={null}\r\n        axisBottom={{\r\n            tickSize: 5,\r\n            tickPadding: 5,\r\n            tickRotation: 0,\r\n            legend: '',\r\n            legendPosition: 'middle',\r\n            legendOffset: 32\r\n        \r\n        }}\r\n        axisLeft={{\r\n            tickSize: 5,\r\n            tickPadding: 5,\r\n            tickRotation: 0,\r\n            legend: '',\r\n            legendPosition: 'middle',\r\n            legendOffset: -40\r\n        }}\r\n        labelSkipWidth={12}\r\n        labelSkipHeight={12}\r\n        labelTextColor=\"#F5F8FA\"\r\n        legends={[\r\n        ]}\r\n        animate={true}\r\n        motionStiffness={90}\r\n        motionDamping={15}\r\n        isInteractive={false}\r\n        theme={{\r\n            textColor: \"#F5F8FA\",\r\n        }}\r\n    />\r\n)","D:\\snektrade\\fang\\src\\services\\UserContext.ts",[],"D:\\snektrade\\fang\\src\\services\\models\\UserModel.ts",[],{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"114","replacedBy":"118"},{"ruleId":"116","replacedBy":"119"},{"ruleId":"120","severity":1,"message":"121","line":6,"column":10,"nodeType":"122","messageId":"123","endLine":6,"endColumn":26},"no-native-reassign",["124"],"no-negated-in-lhs",["125"],["124"],["125"],"@typescript-eslint/no-unused-vars","'isWhiteSpaceLike' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]